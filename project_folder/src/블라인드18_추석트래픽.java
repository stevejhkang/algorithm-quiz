
/**
 * @author steve.jh.kang@gmail.com
 * @time 2020. 5. 8. 오후 11:55:32
 * @category 
* @level 3
* @problem_description 
* 작년 추석 기간 로그 데이터를 분석한 후 초당 최대처리량을 계산해보기로 했다.
* "초당 최대 처리량"은 요청의 응답 완료 여부에 관계없이 
* 임의 시간부터 "1초(1000밀리초)간 처리하는 
* 요청의 최대 개수"
* 를 의미한다.
* 
* 시간은 hh:mm:ss.sss 형식으로 되어있다.
* 처리시간 T는 0.312s와 같이 최대 소수점 셋째 자리까지 기록한다.
*  03:10:33.020 0.011s 는 
*  33.010~33.020까지 0.011초 동안 처리된 요청을 의미한다. 처리시간은 시작시간과 끝시간을 포함한다.
*  
*  서버 타임아웃은 3초 0.001 <=T <=3.000이다.
*  lines는 응답완료시간 S를 기준으로 오름차순 정렬되어 있다.
* @solving_description 
*/

public class 블라인드18_추석트래픽 {
	public static void main(String[] args) {
		String[] lines = { "2016-09-15 00:00:00.000 3s" };
//		String[] lines = { "2016-09-15 23:59:59.999 0.001s" };
//		String[] lines = { "2016-09-15 01:00:04.001 2.0s", "2016-09-15 01:00:07.000 2s" };
//		String[] lines = { "2016-09-15 01:00:04.002 2.0s", "2016-09-15 01:00:07.000 2s" };
//		String[] lines = { "2016-09-15 20:59:57.421 0.351s", "2016-09-15 20:59:58.233 1.181s",
//				"2016-09-15 20:59:58.299 0.8s", "2016-09-15 20:59:58.688 1.041s", "2016-09-15 20:59:59.591 1.412s",
//				"2016-09-15 21:00:00.464 1.466s", "2016-09-15 21:00:00.741 1.581s", "2016-09-15 21:00:00.748 2.31s",
//				"2016-09-15 21:00:00.966 0.381s", "2016-09-15 21:00:02.066 2.62s" };
//		String[] lines = { "2016-09-15 00:00:00.000 2.3s", "2016-09-15 23:59:59.999 0.1s" };
	}
	static class Solution {
		public int solution(String[] lines) {
			int answer = 0;

			return answer;
		}
	}
}

